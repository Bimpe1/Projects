/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pos_exam;

import java.awt.Image;
import java.awt.print.PrinterException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.time.temporal.ChronoUnit;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author adeto
 */
public class saless extends javax.swing.JFrame {

    String id;
    int row1;
    String row2;
    int row3;
    int row4;
    int totalPrice;
    int lowstock;
    int salequantity;
    int purchaseId;
    String productname;
    String expirydate;
    private String selectedProductName;
    private int selectedProductPrice;
    private int stockCount;
    private int selectedProductQuantity;
    private int selectedSaleQuantity;
    private byte[] selectedProductImageData;
    private int unittotal;
    int selectedProductCode;
    String text;
    String textArea;
    ArrayList<String> notifications = new ArrayList<>();
    String email;
    String dob;
    String name;
    String stockName;
    int stockPrice;
    int stockQuantity;
    String productName;
    int saleQuantity;
    LocalDate currentDate;
    LocalDate expiryDate;
    private int transactionCount = 0;
    String myname;
    int purchaseCount;

    /**
     */
    public saless(String email, String id, String myname) {
        initComponents();
        ExpiryReminder();
        LowStockReminder();
        BirthdayReminder();
        TableCount();
        purchaseId = 15020 + (int) (Math.random() * 80900);
        for (String notification : notifications) {
            jTextArea3.append("- " + notification + "\n\n");
        }
        this.email = email;
        this.id = id;
        this.myname = myname;

        StringBuilder sb = new StringBuilder();

        for (String notification : notifications) {
            sb.append(notification).append("\n");
        }

        String itemizedString = sb.toString();

        String receiver = email;
        String senderEmail = "adetobaadebimpe@gmail.com";
        String senderPassword = "fxczbtaorwpkjrns";
        Properties props = new Properties();
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.starttls.enable", "true");
        props.put("mail.smtp.host", "smtp.gmail.com");
        props.put("mail.smtp.port", "587");
        Session session = Session.getInstance(props, new javax.mail.Authenticator() {
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(senderEmail, senderPassword);
            }
        });

        try {
            Message message = new MimeMessage(session);
            message.setFrom(new InternetAddress(senderEmail));
            message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(receiver));
            message.setSubject("Expiry Notifications");
            message.setText("" + itemizedString);
            Transport.send(message);
            JOptionPane.showMessageDialog(rootPane, "Email Sent");
        } catch (MessagingException e) {

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Search product name:");

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pos_exam/img/search.jpg"))); // NOI18N
        jButton1.setText("Search");
        jButton1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1jButton9ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel2.setText("Products");

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Quantity:");

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton2.setText("Add");
        jButton2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2jButton1ActionPerformed(evt);
            }
        });

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setText("Total:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton3.setText("Clear");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3jButton2ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jButton4.setText("Pay");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4jButton3ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton5.setText("Print");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Item details");

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product code", "Product name", "Price", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTable1);

        jButton6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton6.setText("Remove");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(124, 124, 124)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(111, 111, 111))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 666, Short.MAX_VALUE)
                .addGap(75, 75, 75)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addGap(138, 138, 138)
                        .addComponent(jButton5))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel3))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton6)
                        .addGap(389, 389, 389)))
                .addGap(290, 290, 290))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(jLabel7))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(36, 36, 36)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel3)
                                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addComponent(jButton6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5)))))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(194, 194, 194)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(462, 462, 462)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Sale", jPanel1);

        jScrollPane3.setViewportBorder(javax.swing.BorderFactory.createEtchedBorder());
        jScrollPane3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jTextArea3.setEditable(false);
        jTextArea3.setColumns(20);
        jTextArea3.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jTextArea3.setRows(5);
        jScrollPane3.setViewportView(jTextArea3);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1068, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 850, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Notifications", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
private void BirthdayReminder() {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/pos", "root", "$Temilolu12");
            PreparedStatement ps = con.prepareStatement("select * from userregistration");
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                name = rs.getString("name");
                dob = rs.getString("dob");
                currentDate = LocalDate.now();
                String currentDayMonth = currentDate.format(DateTimeFormatter.ofPattern("MM-dd"));
                String userDayMonth = new SimpleDateFormat("MM-dd").format(new SimpleDateFormat("yyyy-MM-dd").parse(dob));

                if (currentDayMonth.equals(userDayMonth)) {
                    text = "Happy Birthday " + name + "!";
                    JOptionPane.showMessageDialog(rootPane, "Happy Birthday " + name + "!");
                    notifications.add(text);

                }
            }

        } catch (Exception e) {

        }
    }

    private void TableCount() {
        DefaultTableModel table = (DefaultTableModel) jTable1.getModel();
        int tablecount = table.getRowCount();
        // Enable or disable jButton6 based on the number of rows in the table
        jButton6.setEnabled(tablecount > 0);

    }

    private void ExpiryReminder() {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/pos", "root", "$Temilolu12");
            PreparedStatement ps = con.prepareStatement("select * from inventory");
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                expirydate = rs.getString("expirydate");
                productname = rs.getString("productname");

                currentDate = LocalDate.now();
                expiryDate = LocalDate.parse(expirydate);

                // Calculate the difference in days between current date and expiry date
                long daysUntilExpiry = ChronoUnit.DAYS.between(currentDate, expiryDate);

                for (int i = 30; i >= 0; i--) {
                    if (daysUntilExpiry == i) {
                        if (i == 0) {
                            text = productname + " has expired!!";
                            JOptionPane.showMessageDialog(rootPane, text);
                        } else {
                            text = productname + " is expiring in " + i + " days!!";
                            JOptionPane.showMessageDialog(rootPane, text);
                        }
                        notifications.add(text);
                        break; // Exit the loop after showing the appropriate notification
                    }
                }
                if (currentDate.isAfter(expiryDate)) {
                    text = productname + " has expired!!";
                    JOptionPane.showMessageDialog(rootPane, text);
                }
            }

        } catch (Exception e) {
            System.out.println(e);
        }
    }

    private void LowStockReminder() {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/pos", "root", "$Temilolu12");
            PreparedStatement ps = con.prepareStatement("select * from inventory");
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                lowstock = rs.getInt("lowstock");
                productname = rs.getString("productname");
                int quantity = rs.getInt("quantity");

                if (quantity == lowstock) {
                    text = productname + " has reached a low stock count of " + lowstock;
                    JOptionPane.showMessageDialog(rootPane, productname + " has reached a low stock count of " + lowstock);
                    notifications.add(text);
                }

            }

        } catch (Exception e) {
            System.out.println(e);
        }
    }

    private int getTotalPriceFromTable() {
        int total = 0;
        DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();

        // Iterate through the rows of the table
        for (int i = 0; i < tableModel.getRowCount(); i++) {
            // Get the unit total from the third column (index 2)
            int unitTotal = (int) tableModel.getValueAt(i, 2);

            // Add the unit total to the overall total
            total += unitTotal;
        }

        return total;
    }

    private void updateTotalLabel() {
        // Call the method to get the total price from the table
        totalPrice = getTotalPriceFromTable();

        // Update the label with the total price
        jLabel6.setText(String.valueOf(totalPrice));
    }


    private void jButton1jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1jButton9ActionPerformed
        String productname = jTextField1.getText();
        jSpinner1.setValue(0);

        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/pos", "root", "$Temilolu12");
            PreparedStatement ps = con.prepareStatement("select * from inventory where productname=?");

            ps.setString(1, productname);

            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                selectedProductName = rs.getString("productname");
                selectedProductCode = rs.getInt("productcode");
                selectedProductPrice = rs.getInt("price");
                selectedProductQuantity = rs.getInt("quantity");
                selectedProductImageData = rs.getBytes("picture");
                expirydate = rs.getString("expirydate");
                currentDate = LocalDate.now();
                expiryDate = LocalDate.parse(expirydate);

                if (selectedProductImageData != null) {
                    ImageIcon imageIcon = new ImageIcon(selectedProductImageData);
                    Image image = imageIcon.getImage().getScaledInstance(jLabel4.getWidth(), jLabel4.getHeight(), Image.SCALE_SMOOTH);
                    jLabel4.setIcon(new ImageIcon(image));
                } else {
                    jLabel4.setIcon(null); // Clear the label if no photo is available
                }
                jTextArea1.setText(selectedProductName + "\nPrice: " + selectedProductPrice + " Naira");

                currentDate = LocalDate.now();
                expiryDate = LocalDate.parse(expirydate);

                long daysUntilExpiry = ChronoUnit.DAYS.between(currentDate, expiryDate);

                for (int i = 30; i >= 0; i--) {
                    if (daysUntilExpiry == i) {
                        if (i == 0) {
                            JOptionPane.showMessageDialog(rootPane, "Product cannot be added because it has expired❌");
                            jTextArea1.setText("");
                            jTextField1.setText("");
                        }
                        break;
                    }
                }
                if (currentDate.isAfter(expiryDate)) {
                    JOptionPane.showMessageDialog(rootPane, "Product cannot be added because it has expired❌");
                }
                if (selectedProductQuantity == lowstock) {
                    JOptionPane.showMessageDialog(rootPane, productname + " has reached a low stock count of " + lowstock);
                }
                if (selectedProductQuantity == 0) {
                    JOptionPane.showMessageDialog(rootPane, productname + " has finished!!");
                    jTextArea1.setText("");
                    jTextField1.setText("");
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "No record for " + productname);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "No record for " + productname);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1jButton9ActionPerformed

    private void jButton2jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2jButton1ActionPerformed
        DefaultTableModel table = (DefaultTableModel) jTable1.getModel();
        salequantity = (int) jSpinner1.getValue();
        if (salequantity == 0) {
            JOptionPane.showMessageDialog(rootPane, "Select a quantity");
        } else {
            try {
                // Use the selected product information here
                String product = selectedProductName;
                int price = selectedProductPrice;
                int quantity = selectedProductQuantity;
                selectedSaleQuantity = (int) jSpinner1.getValue();
                byte[] imageData = selectedProductImageData;

                unittotal = selectedSaleQuantity * price;

                Object[] row = new Object[4];
                row[0] = selectedProductCode;
                row[1] = selectedProductName;
                row[2] = unittotal;
                row[3] = selectedSaleQuantity;
                table.addRow(row);
//                jTextArea2.append(selectedProductName + "\n" + "Quantity: " + selectedSaleQuantity + "\n" + "Price: " + unittotal + " Naira\n\n");
                updateTotalLabel();
            } catch (Exception e) {
                // Handle exceptions appropriately
            }
            TableCount();

        }// TODO add your handling code here:
    }//GEN-LAST:event_jButton2jButton1ActionPerformed

    private void jButton3jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3jButton2ActionPerformed
purchaseId = 15020 + (int) (Math.random() * 80900);       
DefaultTableModel table = (DefaultTableModel) jTable1.getModel();
        table.setRowCount(0);
        jButton4.setEnabled(true);
        jButton2.setEnabled(true);
        jTextArea2.setText("");
        jTextArea1.setText("");
        jTextField1.setText("");
        jLabel6.setText("");
        jSpinner1.setValue(0);
        totalPrice = 0;
        jLabel4.setIcon(null);
        TableCount();// TODO add your handling code here:
    }//GEN-LAST:event_jButton3jButton2ActionPerformed

    private void jButton4jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4jButton3ActionPerformed
//        purchaseId = 15020 + (int) (Math.random() * 80900);
        int result = JOptionPane.showConfirmDialog(rootPane, "Are you sure you want to end the transaction?");
        if (result == JOptionPane.YES_OPTION) {
            DefaultTableModel table = (DefaultTableModel) jTable1.getModel();
            jButton2.setEnabled(false);
            jButton4.setEnabled(false);
            jButton6.setEnabled(false);

            try {
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/pos", "root", "$Temilolu12");

                // Iterate through the rows of the table
                for (int i = 0; i < table.getRowCount(); i++) {
                    productName = table.getValueAt(i, 1).toString();
                    unittotal = Integer.parseInt(table.getValueAt(i, 2).toString());
                    saleQuantity = Integer.parseInt(table.getValueAt(i, 3).toString());

                    // Append product details to jTextArea2
                    jTextArea2.append(productName + "\n"
                            + "Quantity: " + saleQuantity + "\n"
                            + "Price: " + unittotal + " Naira\n\n");

                    // Retrieve stock information from the database
                    PreparedStatement ps = con.prepareStatement("SELECT * FROM inventory WHERE productname=?");
                    ps.setString(1, productName);
                    ResultSet rs = ps.executeQuery();
                    while (rs.next()) {
                        stockQuantity = rs.getInt("quantity");
                        // Subtract the sale quantity from the stock quantity
                        stockCount = stockQuantity - saleQuantity;
                        // Update the stock quantity in the database
                        PreparedStatement updatePs = con.prepareStatement("UPDATE inventory SET quantity=?, quantitysold=quantitysold+? WHERE productname=?");
                        updatePs.setInt(1, stockCount);
                        updatePs.setInt(2, saleQuantity);
                        updatePs.setString(3, productName);
                        updatePs.executeUpdate();
                    }

                    currentDate = LocalDate.now();
                    java.sql.Date date = java.sql.Date.valueOf(currentDate);

                    // Example assuming purchaseId is an auto-incremented primary key in the database
                    String insertQuery = "INSERT INTO purchaseinfo VALUES (?, ?, ?, ?, ?)";
                    try (PreparedStatement insertPs = con.prepareStatement(insertQuery)) {
                        insertPs.setString(1, id);
                        insertPs.setString(2, myname);
                        insertPs.setInt(3, purchaseId);
                        insertPs.setInt(4, totalPrice);
                        insertPs.setDate(5, date);

                        insertPs.executeUpdate();
                        transactionCount++;
                        System.out.println(""+name+":"+transactionCount);

                    } catch (SQLException e) {
                        e.printStackTrace();
                    }

                }
                 JOptionPane.showMessageDialog(rootPane, "Payment Successful!");

                    // Append total and closing message
                    jTextArea2.append("----------------------------\n");
                    jTextArea2.append("Total: " + totalPrice + "\n");
                    jTextArea2.append("Have a good day💝");
            } catch (Exception e) {
                e.printStackTrace();

            } finally {
                result = JOptionPane.CANCEL_OPTION;
            }
        }

    }//GEN-LAST:event_jButton4jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        textArea = jTextArea2.getText();
        if (textArea.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "No product has been selected");
        } else {
            try {
                jTextArea2.print();        // TODO add your handling code here:
            } catch (PrinterException ex) {
                Logger.getLogger(saless.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        DefaultTableModel table = (DefaultTableModel) jTable1.getModel();
        int selectedRow = jTable1.getSelectedRow();
        if (table.getRowCount() == 0) {
            totalPrice = 0;
            jLabel6.setText("" + totalPrice);
        }
        if (selectedRow != -1) {
            table.removeRow(selectedRow);

            totalPrice = totalPrice - row3;
            jLabel6.setText("" + totalPrice);
            TableCount();

        }// TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        DefaultTableModel table = (DefaultTableModel) jTable1.getModel();
        row1 = Integer.parseInt(table.getValueAt(jTable1.getSelectedRow(), 0).toString());
        row2 = table.getValueAt(jTable1.getSelectedRow(), 1).toString();
        row3 = Integer.parseInt(table.getValueAt(jTable1.getSelectedRow(), 2).toString());
        row4 = Integer.parseInt(table.getValueAt(jTable1.getSelectedRow(), 3).toString());
        System.out.println(row1);
        System.out.println(row2);
        System.out.println(row3);
        System.out.println(row4);

    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(saless.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(saless.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(saless.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(saless.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new saless("", "", "").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
